alias func R1;
alias pid R2;

//Free user area page
if func == 2 then
    //call release page on user area page
    multipush(R1, R2, R3);
    R1 = 2;
    R2 = [PROCESS_TABLE + pid*16 + 11];
    call MEMORY_MANAGER;
    multipop(R1, R2, R3);
    return;
endif;

//Exit process
if func == 3 then
    //free page table
    multipush(R1, R2, R3);
    R1 = 4;
    R2 = pid;
    call PROCESS_MANAGER;
    multipop(R1, R2, R3);
    
    //free user area page
    multipush(R1, R2, R3);
    R1 = 2;
    R2 = pid;
    call PROCESS_MANAGER;
    multipop(R1, R2, R3);

    [PROCESS_TABLE + 16*pid + 4] = TERMINATED;
    return;
endif;

//free page table
if func == 4 then
    //invalidate library page
    [PTBR + 0] = -1;
    [PTBR + 1] = 0000;
    [PTBR + 2] = -1;
    [PTBR + 3] = 0000;

    alias page R3;
    page = 4;
    //free all other valid pages
    while page < 20 do
        if [PTBR + page] != -1 then
            multipush(R1, R2, R3);
            R1 = 2;
            R2 = R3;
            call MEMORY_MANAGER;
            multipop(R1, R2, R3);
        endif;
        page = page + 1;
    endwhile;
    return;
endif;
