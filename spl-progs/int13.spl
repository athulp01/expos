alias userSP R0;
alias process_table R1;
userSP = SP;
process_table = PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1];

//switch to kernel stack
[process_table + 13] = userSP;
SP = [process_table + 11]*512 - 1;

alias call_num R2;
call_num = [[PTBR + 2*(userSP - 4)/512]*512 + (userSP-4)%512];

//mem addr of resource table
alias rc_base R4;
rc_base =[process_table + 11]*512 + RESOURCE_TABLE_OFFSET;

//Semget
if call_num == 17 then
    [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+9] = 17;
    alias free_rc R3;
    free_rc = 0;
    //get a free resource table entry
    while (free_rc < 16) do
        if [rc_base + free_rc] == -1 then
            break;
        free_rc = free_rc + 2;
        endif;
    endwhile;

    //if not found return -1
    if(free_rc == 16) then
        [[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = -1;
        [process_table +9] = 0;
        SP = [process_table + 13];
        ireturn;
    endif;

    //Acquire semphonre
    multipush(R0, R1, R2, R3, R4);
    R1 = 6;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    call RESOURCE_MANAGER;
    [rc_base + free_rc + 1] = R0;
    multipop(R0, R1, R2, R3, R4);

    //if no semphonre found return -2
    if [rc_base + free_rc + 1] == -1 then
        [[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = -2;
        [process_table +9] = 0;
        SP = [process_table + 13];
        ireturn;
    endif;
    
    //validate the rc table to semphonrej
    [rc_base + free_rc] = SEMAPHORE;
endif;

//Semrelease
if call_num == 18 then
    [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+9] = 18;

    alias semid R3;
    semid = [[PTBR + 2*(userSP - 5)/512]*512 + (userSP-5)%512];

    //get the corresponding rc table entry
    alias rc R5;
    rc = 0;
    while (rc < 16) do
        if [rc_base + rc] == SEMAPHORE && [rc_base + rc + 1] == semid then
            break;
        rc = rc + 2;
        endif;
    endwhile;

    //doubt: The descriptor is invalid if not in the range 0 - 7
    //This statement is given in docs but max num of semphonre is 32
    //check validity of semphonre
    if rc == 16 || semid <0 || semid > 31 then
        [[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = -1;
        [process_table +9] = 0;
        SP = [process_table + 13];
        ireturn;
    endif;

    //Releas semphonre
    multipush(R0, R1, R2, R3,R4, R5);
    R1 = 7;
    R2 = semid;
    R3 = [SYSTEM_STATUS_TABLE + 1];
    call RESOURCE_MANAGER;
    multipop(R0, R1, R2, R3, R4, R5);

    //invalidate the rc table entry
    [rc_base + rc] = -1;
endif;

[[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = 0;
[process_table +9] = 0;
SP = [process_table + 13];
ireturn;
