//init
loadi(65,7);
loadi(66,8);
//exit
loadi(22,35);
loadi(23,36);
//excepttion
loadi(2, 15);
loadi(3, 16);
//library
loadi(63,13);
loadi(64,14);
//timer
loadi(4, 17);
loadi(5, 18);
//write
loadi(16,29);
loadi(17,30);
//scheduler
loadi(50,63);
loadi(51,64);
//module 0
loadi(40,53);
loadi(41,54);
//module 4
loadi(48,61);
loadi(49,62);
//even program
loadi(83,69);

// Page table for init
PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//Process table entry for init
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 13] = 512*8;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;

//entry point for init
[76*512] = [65 * 512 + 1];

// Page table for even
PTBR = PAGE_TABLE_BASE+40;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 84;
[PTBR+5] = "0110";
[PTBR+6] = 85;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 86;
[PTBR+17] = "0110";
[PTBR+18] = 87;
[PTBR+19] = "0110";

//Process table entry for even
[PROCESS_TABLE + 32 + 11] = 87;
[PROCESS_TABLE + 32 + 1] = 2;
[PROCESS_TABLE + 32 + 4] = CREATED;
[PROCESS_TABLE + 32 + 13] = 512*8;
[PROCESS_TABLE + 32 + 12] = 0;
[PROCESS_TABLE + 32 + 14] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE + 32 + 15] = 10;

//entry point for even
[86*512] = [83 * 512 + 1];

//change process status of all other process to TERMINATED
alias state_field R0;
state_field = PROCESS_TABLE + 48 + 4;
while (state_field <= 28927) do
    [state_field] = TERMINATED;
    state_field = state_field + 16;
endwhile;

//set terminal free
[TERMINAL_STATUS_TABLE] = 0;

//return to os startup code
return;
